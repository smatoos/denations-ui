{"version":3,"file":"index.umd.js","sources":["../src/colors/index.ts","../src/colors/types.ts","../src/colors/token.ts","../src/colors/utils.ts"],"sourcesContent":["import type { ColorTheme } from \"./types\";\n\nexport const light: Readonly<ColorTheme> = Object.freeze({\n  scheme: {\n    $white: \"#fff\",\n    $black: \"#000\",\n\n    // Gray\n    $gray50: \"#eaedf3\",\n    $gray100: \"#ccd2dd\",\n    $gray200: \"#adb5c3\",\n    $gray300: \"#8d97aa\",\n    $gray400: \"#768197\",\n    $gray500: \"#5f6d85\",\n    $gray600: \"#525f74\",\n    $gray700: \"#414c5e\",\n    $gray800: \"#323a49\",\n    $gray900: \"#202632\",\n    // Blue black\n    $blueBlack50: \"#70737e\",\n    $blueBlack100: \"#595c68\",\n    $blueBlack200: \"#414553\",\n    $blueBlack300: \"#292e3d\",\n    $blueBlack400: \"#121728\",\n    $blueBlack500: \"#101424\",\n    $blueBlack600: \"#0e1220\",\n    $blueBlack700: \"#0c101c\",\n    $blueBlack800: \"#0a0d18\",\n    $blueBlack900: \"#090b14\",\n\n    // Primary\n    $primary50: \"#d8fff7\",\n    $primary100: \"#9affe8\",\n    $primary200: \"#00ffd9\",\n    $primary300: \"#00f9c7\",\n    $primary400: \"#00f0b8\",\n    $primary500: \"#00e7ab\",\n    $primary600: \"#00d79b\",\n    $primary700: \"#00c388\",\n    $primary800: \"#00b278\",\n    $primary900: \"#009257\",\n\n    // Alert, Warn\n    $yellow50: \"#fff8df\",\n    $yellow500: \"#ffc700\",\n    $yellow800: \"#ff8a00\",\n\n    // Success\n    $green50: \"#e7f7eb\",\n    $green500: \"#2bbd5f\",\n    $green800: \"#01893d\",\n\n    // Error\n    $red50: \"#ffe5ea\",\n    $red500: \"#ff4b6c\",\n    $red800: \"#c21e4d\",\n\n    // Additional, Link\n    $blue50: \"#e2f2ff\",\n    $blue500: \"#0094fe\",\n    $blue800: \"#0d62ca\",\n  },\n  semanticScheme: {\n    background: \"$blueBlack700\",\n  },\n});\n\nexport const dark: Readonly<ColorTheme> = Object.freeze({\n  ...light,\n});\n","const knownColorGroupNames = [\n  \"white\",\n  \"black\",\n  \"gray\",\n  \"blueBlack\",\n  \"primary\",\n  \"yellow\",\n  \"blue\",\n  \"green\",\n  \"red\",\n] as const;\nexport type KnownColorGroup = typeof knownColorGroupNames[number];\nexport function isKnownColorGroup(str: string): str is KnownColorGroup {\n  return knownColorGroupNames.includes(str as KnownColorGroup);\n}\n\ntype MakeTokenSet<\n  TGroup extends KnownColorGroup,\n  TLightness extends number[]\n> = `$${TGroup}${TLightness[number]}`;\n\nexport type ColorToken =\n  | \"$white\"\n  | \"$black\"\n  | MakeTokenSet<\"gray\", [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]>\n  | MakeTokenSet<\"blueBlack\", [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]>\n  | MakeTokenSet<\"primary\", [50, 100, 200, 300, 400, 500, 600, 700, 800, 900]>\n  | MakeTokenSet<\"yellow\", [50, 500, 800]>\n  | MakeTokenSet<\"green\", [50, 500, 800]>\n  | MakeTokenSet<\"red\", [50, 500, 800]>\n  | MakeTokenSet<\"blue\", [50, 500, 800]>;\n\nexport type ColorScheme = Record<ColorToken, string>;\n\nexport type SemanticColorScheme = {\n  background: ColorToken | string;\n};\n\nexport type SemanticColorKey = keyof SemanticColorScheme;\nexport type ColorTheme = {\n  scheme: ColorScheme;\n  semanticScheme: SemanticColorScheme;\n};\n","import type { ColorToken, KnownColorGroup } from \"./types\";\nimport { isKnownColorGroup } from \"./types\";\n\nconst COLOR_TOKEN_REGEXP = /\\$(?<Group>[a-z]+)(?<Lightness>[1-9]\\d+)$/;\n\ntype ColorValue = [\n  Token: ColorToken,\n  Group: KnownColorGroup,\n  Lightness: number\n];\n\nexport function parseColorToken(token: string): ColorValue {\n  if (token === \"$white\") return [\"$white\", \"white\", 0];\n  if (token === \"$black\") return [\"$black\", \"black\", 0];\n\n  const result = token.match(COLOR_TOKEN_REGEXP);\n  const group = result?.groups?.[\"Group\"];\n  const lightness = result?.groups?.[\"Lightness\"];\n\n  if (group == null || lightness == null) {\n    throw new TypeError(`Invalid color token: ${token}`);\n  }\n\n  if (!isKnownColorGroup(group)) {\n    throw new TypeError(`${group} is unknown color group`);\n  }\n\n  return [token as ColorToken, group, parseInt(lightness)];\n}\n","import type {\n  ColorToken,\n  ColorScheme,\n  SemanticColorKey,\n  SemanticColorScheme,\n} from \"./types\";\n\nexport function populateSemanticColors(\n  colors: ColorScheme,\n  semantics: SemanticColorScheme\n): Readonly<SemanticColorScheme> {\n  const result = {} as SemanticColorScheme;\n  for (const [k, v] of Object.entries(semantics)) {\n    result[k as SemanticColorKey] = colors[v as ColorToken] ?? v;\n  }\n  return Object.freeze(result);\n}\n"],"names":["light","Object","freeze","scheme","$white","$black","$gray50","$gray100","$gray200","$gray300","$gray400","$gray500","$gray600","$gray700","$gray800","$gray900","$blueBlack50","$blueBlack100","$blueBlack200","$blueBlack300","$blueBlack400","$blueBlack500","$blueBlack600","$blueBlack700","$blueBlack800","$blueBlack900","$primary50","$primary100","$primary200","$primary300","$primary400","$primary500","$primary600","$primary700","$primary800","$primary900","$yellow50","$yellow500","$yellow800","$green50","$green500","$green800","$red50","$red500","$red800","$blue50","$blue500","$blue800","semanticScheme","background","knownColorGroupNames","COLOR_TOKEN_REGEXP","token","result","match","group","groups","_result$groups","lightness","_result$groups2","TypeError","includes","parseInt","colors","semantics","entries","v"],"mappings":"okDAEaA,EAA8BC,OAAOC,OAAO,CACvDC,OAAQ,CACNC,OAAQ,OACRC,OAAQ,OAGRC,QAAS,UACTC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UACVC,SAAU,UAEVC,aAAc,UACdC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UACfC,cAAe,UAGfC,WAAY,UACZC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UACbC,YAAa,UAGbC,UAAW,UACXC,WAAY,UACZC,WAAY,UAGZC,SAAU,UACVC,UAAW,UACXC,UAAW,UAGXC,OAAQ,UACRC,QAAS,UACTC,QAAS,UAGTC,QAAS,UACTC,SAAU,UACVC,SAAU,WAEZC,eAAgB,CACdC,WAAY,kDAI0BhD,OAAOC,YAC5CF,KCpECkD,EAAuB,CAC3B,QACA,QACA,OACA,YACA,UACA,SACA,OACA,QACA,OCNIC,IAAqB,wFAQKC,WAC9B,GAAc,WAAVA,EAAoB,MAAO,CAAC,SAAU,QAAS,GACnD,GAAc,WAAVA,EAAoB,MAAO,CAAC,SAAU,QAAS,GAEnD,IAAMC,EAASD,EAAME,MAAMH,GACrBI,QAAQF,YAAAA,EAAQG,eAARC,EAAA,MACRC,QAAYL,YAAAA,EAAQG,eAARG,EAAA,UAElB,GAAa,MAATJ,GAA8B,MAAbG,EACnB,UAAUE,kCAAkCR,GAG9C,IDVOF,EAAqBW,SCULN,GACrB,UAAUK,UAAaL,6BAGzB,MAAO,CAACH,EAAqBG,EAAOO,SAASJ,uCCnB7CK,EACAC,GAGA,IADA,IAAMX,EAAS,SACMpD,OAAOgE,QAAQD,kBAAY,cAAjCE,OACbb,iBAAgCU,EAAOG,MAAoBA,EAE7D,OAAOjE,OAAOC,OAAOmD"}